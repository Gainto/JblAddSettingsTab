{"version":3,"sources":["webpack:////var/www/html/custom/plugins/JblAddSettingsTab/src/Resources/app/administration/src/module/sw-settings-cumulated-weight/page/sw-settings-cumulated-weight/index.js","webpack:////var/www/html/custom/plugins/JblAddSettingsTab/src/Resources/app/administration/src/module/sw-settings-cumulated-weight/page/sw-settings-cumulated-weight/sw-settings-cumulated-weight.html.twig"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","_typeof","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_Shopware","Shopware","Mixin","Component","Criteria","Data","template","inject","mixins","getByName","data","sortBy","sortDirection","isLoading","filterCriteria","defaultFilters","storeKey","activeFilterNumber","metaInfo","title","this","$createTitle","watch","defaultCriteria","handler","getList","deep","computed","orderLineItemRepository","repositoryFactory","cumulatedWeightColumns","getCumulatedWeightColumns","_this","criteria","page","limit","setTerm","term","split","addSorting","sort","addFilter","equals","filter","addAssociation","listFilters","created","createdComponent","methods","_this2","_callee","_context","Service","mergeWithStoredFilters","filters","search","api","total","cumulate","args","arguments","apply","tmp","item","addedIdx","findIndex","e","number","payload","productNumber","label","quantity","weight","options","product","updateCriteria","property"],"mappings":";0YACAA,EAAA,kBAAAC,GAAA,IAAAA,EAAA,GAAAC,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAI,gBAAA,SAAAC,EAAAC,EAAAC,GAAAF,EAAAC,GAAAC,EAAAC,OAAAC,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAZ,EAAAC,EAAAE,GAAA,OAAAR,OAAAI,eAAAC,EAAAC,EAAA,CAAAE,QAAAU,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAf,EAAAC,GAAA,IAAAW,EAAA,aAAAI,GAAAJ,EAAA,SAAAZ,EAAAC,EAAAE,GAAA,OAAAH,EAAAC,GAAAE,GAAA,SAAAc,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAAvB,qBAAA2B,EAAAJ,EAAAI,EAAAC,EAAA7B,OAAA8B,OAAAH,EAAA1B,WAAA8B,EAAA,IAAAC,EAAAN,GAAA,WAAAtB,EAAAyB,EAAA,WAAArB,MAAAyB,EAAAV,EAAAE,EAAAM,KAAAF,EAAA,SAAAK,EAAAC,EAAA9B,EAAA+B,GAAA,WAAAC,KAAA,SAAAD,IAAAD,EAAAG,KAAAjC,EAAA+B,IAAA,MAAAf,GAAA,OAAAgB,KAAA,QAAAD,IAAAf,IAAAvB,EAAAwB,OAAA,IAAAiB,EAAA,YAAAX,KAAA,SAAAY,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAzB,EAAAyB,EAAA/B,GAAA,8BAAAgC,EAAA3C,OAAA4C,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA9C,GAAAG,EAAAoC,KAAAO,EAAAlC,KAAA+B,EAAAG,GAAA,IAAAE,EAAAN,EAAAxC,UAAA2B,EAAA3B,UAAAD,OAAA8B,OAAAY,GAAA,SAAAM,EAAA/C,GAAA,0BAAAgD,SAAA,SAAAC,GAAAjC,EAAAhB,EAAAiD,GAAA,SAAAd,GAAA,YAAAe,QAAAD,EAAAd,SAAA,SAAAgB,EAAAvB,EAAAwB,GAAA,SAAAC,EAAAJ,EAAAd,EAAAmB,EAAAC,GAAA,IAAAC,EAAAvB,EAAAL,EAAAqB,GAAArB,EAAAO,GAAA,aAAAqB,EAAApB,KAAA,KAAAqB,EAAAD,EAAArB,IAAA5B,EAAAkD,EAAAlD,MAAA,OAAAA,GAAA,UAAAmD,EAAAnD,IAAAN,EAAAoC,KAAA9B,EAAA,WAAA6C,EAAAE,QAAA/C,EAAAoD,SAAAC,MAAA,SAAArD,GAAA8C,EAAA,OAAA9C,EAAA+C,EAAAC,MAAA,SAAAnC,GAAAiC,EAAA,QAAAjC,EAAAkC,EAAAC,MAAAH,EAAAE,QAAA/C,GAAAqD,MAAA,SAAAC,GAAAJ,EAAAlD,MAAAsD,EAAAP,EAAAG,MAAA,SAAAK,GAAA,OAAAT,EAAA,QAAAS,EAAAR,EAAAC,QAAAC,EAAArB,KAAA,IAAA4B,EAAA5D,EAAA,gBAAAI,MAAA,SAAA0C,EAAAd,GAAA,SAAA6B,IAAA,WAAAZ,GAAA,SAAAE,EAAAC,GAAAF,EAAAJ,EAAAd,EAAAmB,EAAAC,MAAA,OAAAQ,MAAAH,KAAAI,YAAA,SAAAhC,EAAAV,EAAAE,EAAAM,GAAA,IAAAmC,EAAA,iCAAAhB,EAAAd,GAAA,iBAAA8B,EAAA,UAAAC,MAAA,iDAAAD,EAAA,cAAAhB,EAAA,MAAAd,EAAA,OAAAgC,IAAA,IAAArC,EAAAmB,SAAAnB,EAAAK,QAAA,KAAAiC,EAAAtC,EAAAsC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAAtC,GAAA,GAAAuC,EAAA,IAAAA,IAAA/B,EAAA,gBAAA+B,GAAA,YAAAvC,EAAAmB,OAAAnB,EAAAyC,KAAAzC,EAAA0C,MAAA1C,EAAAK,SAAA,aAAAL,EAAAmB,OAAA,uBAAAgB,EAAA,MAAAA,EAAA,YAAAnC,EAAAK,IAAAL,EAAA2C,kBAAA3C,EAAAK,SAAA,WAAAL,EAAAmB,QAAAnB,EAAA4C,OAAA,SAAA5C,EAAAK,KAAA8B,EAAA,gBAAAT,EAAAvB,EAAAX,EAAAE,EAAAM,GAAA,cAAA0B,EAAApB,KAAA,IAAA6B,EAAAnC,EAAA6C,KAAA,6BAAAnB,EAAArB,MAAAG,EAAA,gBAAA/B,MAAAiD,EAAArB,IAAAwC,KAAA7C,EAAA6C,MAAA,UAAAnB,EAAApB,OAAA6B,EAAA,YAAAnC,EAAAmB,OAAA,QAAAnB,EAAAK,IAAAqB,EAAArB,OAAA,SAAAmC,EAAAF,EAAAtC,GAAA,IAAA8C,EAAA9C,EAAAmB,SAAAmB,EAAAzD,SAAAiE,GAAA,QAAAC,IAAA5B,EAAA,OAAAnB,EAAAsC,SAAA,eAAAQ,GAAAR,EAAAzD,SAAAmE,SAAAhD,EAAAmB,OAAA,SAAAnB,EAAAK,SAAA0C,EAAAP,EAAAF,EAAAtC,GAAA,UAAAA,EAAAmB,SAAA,WAAA2B,IAAA9C,EAAAmB,OAAA,QAAAnB,EAAAK,IAAA,IAAA4C,UAAA,oCAAAH,EAAA,aAAAtC,EAAA,IAAAkB,EAAAvB,EAAAgB,EAAAmB,EAAAzD,SAAAmB,EAAAK,KAAA,aAAAqB,EAAApB,KAAA,OAAAN,EAAAmB,OAAA,QAAAnB,EAAAK,IAAAqB,EAAArB,IAAAL,EAAAsC,SAAA,KAAA9B,EAAA,IAAA0C,EAAAxB,EAAArB,IAAA,OAAA6C,IAAAL,MAAA7C,EAAAsC,EAAAa,YAAAD,EAAAzE,MAAAuB,EAAAoD,KAAAd,EAAAe,QAAA,WAAArD,EAAAmB,SAAAnB,EAAAmB,OAAA,OAAAnB,EAAAK,SAAA0C,GAAA/C,EAAAsC,SAAA,KAAA9B,GAAA0C,GAAAlD,EAAAmB,OAAA,QAAAnB,EAAAK,IAAA,IAAA4C,UAAA,oCAAAjD,EAAAsC,SAAA,KAAA9B,GAAA,SAAA8C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,SAAAM,WAAAC,KAAAN,GAAA,SAAAO,EAAAP,GAAA,IAAA9B,EAAA8B,EAAAQ,YAAA,GAAAtC,EAAApB,KAAA,gBAAAoB,EAAArB,IAAAmD,EAAAQ,WAAAtC,EAAA,SAAAzB,EAAAN,GAAA,KAAAkE,WAAA,EAAAJ,OAAA,SAAA9D,EAAAuB,QAAAoC,EAAA,WAAAW,OAAA,YAAAlD,EAAAmD,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAAtF,GAAA,GAAAuF,EAAA,OAAAA,EAAA5D,KAAA2D,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAAG,QAAA,KAAAC,GAAA,EAAAlB,EAAA,SAAAA,IAAA,OAAAkB,EAAAJ,EAAAG,QAAA,GAAAlG,EAAAoC,KAAA2D,EAAAI,GAAA,OAAAlB,EAAA3E,MAAAyF,EAAAI,GAAAlB,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAA3E,WAAAsE,EAAAK,EAAAP,MAAA,EAAAO,GAAA,OAAAA,UAAA,OAAAA,KAAAf,GAAA,SAAAA,IAAA,OAAA5D,WAAAsE,EAAAF,MAAA,UAAApC,EAAAvC,UAAAwC,EAAArC,EAAA2C,EAAA,eAAAvC,MAAAiC,EAAAtB,cAAA,IAAAf,EAAAqC,EAAA,eAAAjC,MAAAgC,EAAArB,cAAA,IAAAqB,EAAA8D,YAAArF,EAAAwB,EAAA1B,EAAA,qBAAAjB,EAAAyG,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAAjE,GAAA,uBAAAiE,EAAAH,aAAAG,EAAAE,QAAA7G,EAAA8G,KAAA,SAAAJ,GAAA,OAAAxG,OAAA6G,eAAA7G,OAAA6G,eAAAL,EAAA/D,IAAA+D,EAAAM,UAAArE,EAAAxB,EAAAuF,EAAAzF,EAAA,sBAAAyF,EAAAvG,UAAAD,OAAA8B,OAAAiB,GAAAyD,GAAA1G,EAAAiH,MAAA,SAAA3E,GAAA,OAAAwB,QAAAxB,IAAAY,EAAAI,EAAAnD,WAAAgB,EAAAmC,EAAAnD,UAAAY,GAAA,0BAAAf,EAAAsD,gBAAAtD,EAAAkH,MAAA,SAAAzF,EAAAC,EAAAC,EAAAC,EAAA2B,QAAA,IAAAA,MAAA4D,SAAA,IAAAC,EAAA,IAAA9D,EAAA9B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA2B,GAAA,OAAAvD,EAAAyG,oBAAA/E,GAAA0F,IAAA/B,OAAAtB,MAAA,SAAAH,GAAA,OAAAA,EAAAkB,KAAAlB,EAAAlD,MAAA0G,EAAA/B,WAAAnC,EAAAD,GAAA9B,EAAA8B,EAAAhC,EAAA,aAAAE,EAAA8B,EAAApC,GAAA,0BAAAM,EAAA8B,EAAA,qDAAAjD,EAAAqH,KAAA,SAAAC,GAAA,IAAAC,EAAArH,OAAAoH,GAAAD,EAAA,WAAA7G,KAAA+G,EAAAF,EAAAtB,KAAAvF,GAAA,OAAA6G,EAAAG,UAAA,SAAAnC,IAAA,KAAAgC,EAAAf,QAAA,KAAA9F,EAAA6G,EAAAI,MAAA,GAAAjH,KAAA+G,EAAA,OAAAlC,EAAA3E,MAAAF,EAAA6E,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAAP,MAAA,EAAAO,IAAArF,EAAAgD,SAAAd,EAAA/B,UAAA,CAAAyG,YAAA1E,EAAAgE,MAAA,SAAAwB,GAAA,QAAAC,KAAA,OAAAtC,KAAA,OAAAX,KAAA,KAAAC,WAAAK,EAAA,KAAAF,MAAA,OAAAP,SAAA,UAAAnB,OAAA,YAAAd,SAAA0C,EAAA,KAAAc,WAAA3C,QAAA6C,IAAA0B,EAAA,QAAAb,KAAA,WAAAA,EAAAe,OAAA,IAAAxH,EAAAoC,KAAA,KAAAqE,KAAAR,OAAAQ,EAAAgB,MAAA,WAAAhB,QAAA7B,IAAA8C,KAAA,gBAAAhD,MAAA,MAAAiD,EAAA,KAAAjC,WAAA,GAAAG,WAAA,aAAA8B,EAAAxF,KAAA,MAAAwF,EAAAzF,IAAA,YAAA0F,MAAApD,kBAAA,SAAAqD,GAAA,QAAAnD,KAAA,MAAAmD,EAAA,IAAAhG,EAAA,cAAAiG,EAAAC,EAAAC,GAAA,OAAAzE,EAAApB,KAAA,QAAAoB,EAAArB,IAAA2F,EAAAhG,EAAAoD,KAAA8C,EAAAC,IAAAnG,EAAAmB,OAAA,OAAAnB,EAAAK,SAAA0C,KAAAoD,EAAA,QAAA7B,EAAA,KAAAT,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA,KAAAK,WAAAS,GAAA5C,EAAA8B,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAwC,EAAA,UAAAzC,EAAAC,QAAA,KAAAiC,KAAA,KAAAU,EAAAjI,EAAAoC,KAAAiD,EAAA,YAAA6C,EAAAlI,EAAAoC,KAAAiD,EAAA,iBAAA4C,GAAAC,EAAA,SAAAX,KAAAlC,EAAAE,SAAA,OAAAuC,EAAAzC,EAAAE,UAAA,WAAAgC,KAAAlC,EAAAG,WAAA,OAAAsC,EAAAzC,EAAAG,iBAAA,GAAAyC,GAAA,QAAAV,KAAAlC,EAAAE,SAAA,OAAAuC,EAAAzC,EAAAE,UAAA,YAAA2C,EAAA,UAAAjE,MAAA,kDAAAsD,KAAAlC,EAAAG,WAAA,OAAAsC,EAAAzC,EAAAG,gBAAAf,OAAA,SAAAtC,EAAAD,GAAA,QAAAiE,EAAA,KAAAT,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA,KAAAK,WAAAS,GAAA,GAAAd,EAAAC,QAAA,KAAAiC,MAAAvH,EAAAoC,KAAAiD,EAAA,oBAAAkC,KAAAlC,EAAAG,WAAA,KAAA2C,EAAA9C,EAAA,OAAA8C,IAAA,UAAAhG,GAAA,aAAAA,IAAAgG,EAAA7C,QAAApD,MAAAiG,EAAA3C,aAAA2C,EAAA,UAAA5E,EAAA4E,IAAAtC,WAAA,UAAAtC,EAAApB,OAAAoB,EAAArB,MAAAiG,GAAA,KAAAnF,OAAA,YAAAiC,KAAAkD,EAAA3C,WAAAnD,GAAA,KAAA+F,SAAA7E,IAAA6E,SAAA,SAAA7E,EAAAkC,GAAA,aAAAlC,EAAApB,KAAA,MAAAoB,EAAArB,IAAA,gBAAAqB,EAAApB,MAAA,aAAAoB,EAAApB,KAAA,KAAA8C,KAAA1B,EAAArB,IAAA,WAAAqB,EAAApB,MAAA,KAAAyF,KAAA,KAAA1F,IAAAqB,EAAArB,IAAA,KAAAc,OAAA,cAAAiC,KAAA,kBAAA1B,EAAApB,MAAAsD,IAAA,KAAAR,KAAAQ,GAAApD,GAAAgG,OAAA,SAAA7C,GAAA,QAAAW,EAAA,KAAAT,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA,KAAAK,WAAAS,GAAA,GAAAd,EAAAG,eAAA,YAAA4C,SAAA/C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAAhD,IAAAiG,MAAA,SAAAhD,GAAA,QAAAa,EAAA,KAAAT,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA,KAAAK,WAAAS,GAAA,GAAAd,EAAAC,WAAA,KAAA/B,EAAA8B,EAAAQ,WAAA,aAAAtC,EAAApB,KAAA,KAAAoG,EAAAhF,EAAArB,IAAA0D,EAAAP,GAAA,OAAAkD,GAAA,UAAAtE,MAAA,0BAAAuE,cAAA,SAAAzC,EAAAf,EAAAE,GAAA,YAAAf,SAAA,CAAAzD,SAAAkC,EAAAmD,GAAAf,aAAAE,WAAA,cAAAlC,SAAA,KAAAd,SAAA0C,GAAAvC,IAAAzC,EAAA,SAAA6I,EAAAC,EAAArF,EAAAC,EAAAqF,EAAAC,EAAAxI,EAAA8B,GAAA,QAAA6C,EAAA2D,EAAAtI,GAAA8B,GAAA5B,EAAAyE,EAAAzE,MAAA,MAAAuD,GAAA,YAAAP,EAAAO,GAAAkB,EAAAL,KAAArB,EAAA/C,GAAAyG,QAAA1D,QAAA/C,GAAAqD,KAAAgF,EAAAC,GACA,IAAAC,EAAsCC,SAA9BhH,EAAO+G,EAAP/G,QAAoBiH,GAAFF,EAATG,UAAgBH,EAALE,OACpBE,EAAaH,SAASI,KAAtBD,SAEO,WACXE,SCNW,spDDSXC,OAAQ,CAAC,oBAAoB,iBAE7BC,OAAQ,CACJN,EAAMO,UAAU,YAGpBC,KAAI,WACA,MAAO,CACHA,KAAM,GACNC,OAAQ,QACRC,cAAe,OACfC,WAAW,EACXC,eAAgB,GAChBC,eAAgB,GAEhBC,SAAU,+BACVC,mBAAoB,IAI5BC,SAAQ,WACJ,MAAO,CACHC,MAAOC,KAAKC,iBAIpBC,MAAO,CACHC,gBAAiB,CACbC,QAAO,WACHJ,KAAKK,WAETC,MAAM,IAKdC,SAAU,CACNC,wBAAuB,WACnB,OAAOR,KAAKS,kBAAkB9I,OAAO,oBAGzC+I,uBAAsB,WAClB,OAAOV,KAAKW,6BAGhBR,gBAAe,WAAI,IAADS,EAAA,KACRC,EAAW,IAAI7B,EAASgB,KAAKc,KAAMd,KAAKe,OAiB9C,OAfAF,EAASG,QAAQhB,KAAKiB,MAEtBjB,KAAKT,OAAO2B,MAAM,KAAKpI,SAAQ,SAAAyG,GAC3BsB,EAASM,WAAWnC,EAASoC,KAAK7B,EAAQqB,EAAKpB,mBAGnDqB,EAASQ,UAAUrC,EAASsC,OAAO,OAAQ,YAE3CtB,KAAKN,eAAe5G,SAAQ,SAAAyI,GACxBV,EAASQ,UAAUE,MAGvBV,EACKW,eAAe,WAEbX,GAGXY,YAAW,WACP,MAAO,KAIfC,QAAO,WACH1B,KAAK2B,oBAGTC,QAAS,CACLD,iBAAgB,WACZ3B,KAAKK,WAGHA,QAAO,WAAI,IAxFzBrI,EAwFwB6J,EAAA,YAxFxB7J,EAwFwBtC,IAAA+G,MAAA,SAAAqF,IAAA,IAAAjB,EAAA,OAAAnL,IAAAyB,MAAA,SAAA4K,GAAA,cAAAA,EAAAzE,KAAAyE,EAAA/G,MAAA,OACU,OAAtB6G,EAAKpC,WAAY,EAAKsC,EAAA/G,KAAA,EAEC6D,SAASmD,QAAQ,iBACnCC,uBAAuBJ,EAAKjC,SAAUiC,EAAK1B,iBAAiB,KAAD,EAD1DU,EAAQkB,EAAA1H,KAGdwH,EAAKhC,mBAAqBgB,EAASqB,QAAQjG,OAE3C4F,EAAKrB,wBAAwB2B,OAAOtB,EAAUhJ,EAAQuK,KAAK1I,MAAK,SAACH,GAK7D,OAJAsI,EAAKQ,MAAQ9I,EAAO8I,MACpBR,EAAKvC,KAAOuC,EAAKS,SAAS/I,GAC1BsI,EAAKpC,WAAY,EAEV3C,QAAQ1D,aAChBiF,OAAM,WACLwD,EAAKpC,WAAY,KAClB,wBAAAsC,EAAAtE,UAAAqE,MAxGf,eAAAxK,EAAA,KAAAiL,EAAAC,UAAA,WAAA1F,SAAA,SAAA1D,EAAAC,GAAA,IAAAoF,EAAAzG,EAAAyK,MAAAnL,EAAAiL,GAAA,SAAA7D,EAAArI,GAAAmI,EAAAC,EAAArF,EAAAC,EAAAqF,EAAAC,EAAA,OAAAtI,GAAA,SAAAsI,EAAAzH,GAAAsH,EAAAC,EAAArF,EAAAC,EAAAqF,EAAAC,EAAA,QAAAzH,GAAAwH,OAAA/D,WA2GQ2H,SAAQ,SAAC/I,GACL,IAAImJ,EAAM,GAuBV,OArBAnJ,EAAOT,SAAQ,SAAC6J,GAEZ,IAAIC,EAAWF,EAAIG,WAAU,SAACC,GAAC,OAAKA,EAAEC,SAAWJ,EAAKK,QAAQC,kBAE7C,IAAdL,IACCA,EAAWF,EAAIhH,KAAK,CAChBwH,MAAOP,EAAKO,MACZH,OAAQJ,EAAKK,QAAQC,cACrBE,SAAU,EACVC,OAAQ,EACRC,QAAS,KACT,GAGRX,EAAIE,GAAoB,UAAKD,EAAKQ,SAClCT,EAAIE,GAAmB,QAAID,EAAKK,QAAQK,QAEb,OAAxBV,EAAKW,QAAQF,SACZV,EAAIE,GAAkB,QAAKD,EAAKQ,SAAWR,EAAKW,QAAQF,WAGzDV,GAGXa,eAAc,SAAC1C,GACXb,KAAKc,KAAO,EACZd,KAAKN,eAAiBmB,GAG1BF,0BAAyB,WACrB,MAAM,CACF,CACI6C,SAAU,QACVN,MAAO,WAEX,CACIM,SAAU,SACVN,MAAO,iBAEX,CACIM,SAAU,WACVN,MAAO,UAEX,CACIM,SAAU,SACVN,MAAO","file":"static/js/0.js","sourcesContent":["import template from './sw-settings-cumulated-weight.html.twig';\n\nconst { Context, Component, Mixin } = Shopware;\nconst { Criteria } = Shopware.Data;\n\nexport default {\n    template,\n\n\n    inject: ['repositoryFactory','filterFactory'],\n\n    mixins: [\n        Mixin.getByName('listing')\n    ],\n\n    data() {\n        return {\n            data: [],\n            sortBy: 'label',\n            sortDirection: 'DESC',\n            isLoading: false,\n            filterCriteria: [],\n            defaultFilters: [\n            ],\n            storeKey: 'grid.filter.cumulated.weight',\n            activeFilterNumber: 0,\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    watch: {\n        defaultCriteria: {\n            handler() {\n                this.getList();\n            },\n            deep: true,\n        },\n\n    },\n\n    computed: {\n        orderLineItemRepository() {\n            return this.repositoryFactory.create('order_line_item');\n        },\n\n        cumulatedWeightColumns() {\n            return this.getCumulatedWeightColumns();\n        },\n\n        defaultCriteria() {\n            const criteria = new Criteria(this.page, this.limit);\n\n            criteria.setTerm(this.term);\n\n            this.sortBy.split(',').forEach(sortBy => {\n                criteria.addSorting(Criteria.sort(sortBy, this.sortDirection));\n            });\n\n            criteria.addFilter(Criteria.equals('type', 'product'));\n\n            this.filterCriteria.forEach(filter => {\n                criteria.addFilter(filter);\n            });\n\n            criteria\n                .addAssociation('product')\n\n            return criteria;\n        },\n\n        listFilters() {\n            return [];\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.getList();\n        },\n\n        async getList() {\n            this.isLoading = true;\n\n            const criteria = await Shopware.Service('filterService')\n                .mergeWithStoredFilters(this.storeKey, this.defaultCriteria);\n\n            this.activeFilterNumber = criteria.filters.length;\n\n            this.orderLineItemRepository.search(criteria, Context.api).then((result) => {\n                this.total = result.total;\n                this.data = this.cumulate(result);\n                this.isLoading = false;\n\n                return Promise.resolve();\n            }).catch(() => {\n                this.isLoading = false;\n            });\n        },\n\n        cumulate(result){\n            let tmp = [];\n\n            result.forEach((item) => {\n\n                let addedIdx = tmp.findIndex((e) => e.number === item.payload.productNumber);\n\n                if(addedIdx === -1){\n                    addedIdx = tmp.push({\n                        label: item.label,\n                        number: item.payload.productNumber,\n                        quantity: 0,\n                        weight: 0,\n                        options: {}\n                    }) -1;\n                }\n\n                tmp[addedIdx]['quantity'] += item.quantity;\n                tmp[addedIdx]['options'] = item.payload.options;\n\n                if(item.product.weight !== null){\n                    tmp[addedIdx]['weight'] += item.quantity * item.product.weight;\n                }\n            });\n            return tmp;\n        },\n\n        updateCriteria(criteria) {\n            this.page = 1;\n            this.filterCriteria = criteria;\n        },\n\n        getCumulatedWeightColumns(){\n            return[\n                {\n                    property: 'label',\n                    label: 'Produkt',\n                },\n                {\n                    property: 'number',\n                    label: 'Produktnummer',\n                },\n                {\n                    property: 'quantity',\n                    label: 'Anzahl',\n                },\n                {\n                    property: 'weight',\n                    label: 'Gewicht',\n                },\n            ];\n        },\n\n    }\n};\n","export default \"{% block sw_settings_cumulated_weight%}\\n<sw-page class=\\\"sw-settings-cumulated-weight\\\">\\n\\n    <template #content>\\n        <div class=\\\"sw-settings-cumulated-weight__content\\\">\\n            <sw-data-grid  class=\\\"sw-settings-cumulated-weight-grid\\\"\\n                           ref=\\\"sw-settings-cumulated-weight-grid\\\"\\n                           identifier=\\\"sw-settings-cumulated-weight-grid\\\"\\n                           :fullPage=\\\"true\\\"\\n                           :showActions=\\\"false\\\"\\n                           :dataSource=\\\"data\\\"\\n                           :columns=\\\"cumulatedWeightColumns\\\"\\n                           :showSelection=\\\"false\\\"\\n                           :isLoading=\\\"isLoading\\\"\\n                           :sortBy=\\\"sortBy\\\"\\n                           :sortDirection=\\\"sortDirection\\\"\\n                           @page-change=\\\"onPageChange\\\"\\n                           @column-sort=\\\"onSortColumn\\\"\\n            >\\n\\n                <template #column-label=\\\"{ item }\\\">\\n                    <div style=\\\"margin-right:1em;\\\">{{ item.label }}</div>\\n                    <template v-for=\\\"opt in item.options\\\">\\n                        <sw-label appearance=\\\"pill\\\" variant=\\\"info\\\" size=\\\"small\\\">{{ opt.group }}: {{ opt.option }}</sw-label>\\n                    </template>\\n                </template>\\n\\n            </sw-data-grid>\\n        </div>\\n\\n        <sw-empty-state v-if=\\\"!isLoading && data.length == 0\\\" title=\\\"Keine Einträge gefunden\\\">\\n            <template #icon>\\n                <img :src=\\\"'/administration/static/img/empty-states/products-empty-state.svg' | asset\\\">\\n            </template>\\n        </sw-empty-state>\\n\\n    </template>\\n</sw-page>\\n{% endblock %}\";"],"sourceRoot":""}